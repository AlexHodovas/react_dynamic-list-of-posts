{"version":3,"sources":["api/usersApi.js","api/postsApi.js","api/commentsApi.js","components/User.js","components/Comment.js","components/CommentList.js","components/Post.js","components/PostList.js","App.js","index.js"],"names":["getUsersResolvedPromise","response","result","regenerator_default","a","async","_context","prev","next","awrap","fetch","sent","json","abrupt","stop","getPostsResolvedPromise","getCommentsResolvedPromise","User","_ref","userOne","react_default","createElement","className","name","email","address","city","Comment","item","id","body","CommentList","commentOne","map","comment","components_Comment","key","Post","postOne","components_User","user","title","components_CommentList","comments","PostList","posts","post","components_Post","App","_useState","useState","_useState2","Object","slicedToArray","postsWithAll","getPosts","_useState3","_useState4","isLoading","setLoading","length","type","onClick","users","postsArr","usersArr","commentsArr","objectSpread2","find","userId","filter","postId","getPostsWithUsersAndComments","loadData","components_PostList","ReactDOM","render","src_App","document","getElementById"],"mappings":"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","file":"static/js/main.26aef5f5.chunk.js","sourcesContent":["export const getUsersResolvedPromise = async() => {\n  const response = await fetch('https://jsonplaceholder.typicode.com/users');\n  const result = await response.json();\n\n  return result;\n};\n","export const getPostsResolvedPromise = async() => {\n  const response = await fetch('https://jsonplaceholder.typicode.com/posts');\n  const result = await response.json();\n\n  return result;\n};\n","export const getCommentsResolvedPromise = async() => {\n  const response = await fetch('https://jsonplaceholder.typicode.com/comments');\n  const result = await response.json();\n\n  return result;\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst User = ({ userOne }) => (\n  <div className=\"user\">\n    {'written by '}\n    {userOne.name}\n    {<br />}\n    {userOne.email}\n    {<br />}\n    {userOne.address.city}\n  </div>\n);\n\nUser.propTypes = { userOne: PropTypes.objectOf(PropTypes.any).isRequired };\n\nexport default User;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst Comment = ({ item }) => (\n  <div className=\"comment\">\n    <p>\n      {'Comment - '}\n      {item.id}\n      {<br />}\n    </p>\n    <p>\n      {item.body}\n      {<br />}\n    </p>\n    <p>\n      {'E-mail - '}\n      {item.email}\n      {<br />}\n    </p>\n  </div>\n);\n\nComment.propTypes = {\n  item: PropTypes.objectOf(\n    PropTypes.any\n  ).isRequired,\n};\n\nexport default Comment;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Comment from './Comment';\n\nconst CommentList = ({ commentOne }) => (\n  <div className=\"comments\">\n    <h2>Comments</h2>\n    { commentOne.map(comment => (\n      <Comment item={comment} key={comment.id} />\n    )) }\n  </div>\n);\n\nCommentList.propTypes = {\n  commentOne: PropTypes.arrayOf(\n    PropTypes.any\n  ).isRequired,\n};\n\nexport default CommentList;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport User from './User';\nimport CommentList from './CommentList';\n\nconst Post = ({ postOne }) => (\n  <div className=\"post\">\n    <User userOne={postOne.user} />\n    <p className=\"post-title\">\n      {'Post# - '}\n      {postOne.id}\n    </p>\n    <p>\n      {'Topic - '}\n      {postOne.title}\n    </p>\n    <p>{postOne.body}</p>\n    <CommentList commentOne={postOne.comments} />\n  </div>\n);\n\nPost.propTypes = { postOne: PropTypes.objectOf(PropTypes.any).isRequired };\n\nexport default Post;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Post from './Post';\n\nconst PostList = ({ posts }) => (\n  <div className=\"posts\">\n    { posts.map(post => (\n      <Post postOne={post} key={post.id} />\n    )) }\n  </div>\n);\n\nPostList.propTypes = { posts: PropTypes.arrayOf(PropTypes.object).isRequired };\n\nexport default PostList;\n","import React, { useState } from 'react';\nimport './App.css';\nimport { getUsersResolvedPromise } from './api/usersApi';\nimport { getPostsResolvedPromise } from './api/postsApi';\nimport { getCommentsResolvedPromise } from './api/commentsApi';\nimport PostList from './components/PostList';\n\nfunction App() {\n  const [postsWithAll, getPosts] = useState([]);\n  const [isLoading, setLoading] = useState(false);\n\n  const loadData = async() => {\n    setLoading(true);\n    const posts = await getPostsResolvedPromise();\n    const users = await getUsersResolvedPromise();\n    const comments = await getCommentsResolvedPromise();\n\n    const getPostsWithUsersAndComments = (postsArr, usersArr, commentsArr) => (\n      postsArr.map(post => (\n        {\n          ...post,\n          user: usersArr.find(user => user.id === post.userId),\n          comments: commentsArr.filter(comment => comment.postId === post.id),\n        }\n      ))\n    );\n\n    getPosts(getPostsWithUsersAndComments(posts, users, comments));\n    setLoading(false);\n  };\n\n  if (postsWithAll.length === 0) {\n    return (\n      <button\n        type=\"button\"\n        onClick={() => loadData()}\n      >\n        {isLoading ? 'Loading...' : 'Load'}\n      </button>\n    );\n  }\n\n  return (\n    <div className=\"App\">\n      <h1>Dynamic list of posts</h1>\n      <PostList posts={postsWithAll} />\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}